quarkus.security.jdbc.enabled=true
quarkus.security.jdbc.principal-query.sql=SELECT password FROM user u WHERE u.login=?
quarkus.security.jdbc.principal-query.bcrypt-password-mapper.enabled=true
quarkus.security.jdbc.principal-query.bcrypt-password-mapper.password-index=1
quarkus.security.jdbc.principal-query.bcrypt-password-mapper.iteration-count-index=-1
quarkus.security.jdbc.principal-query.bcrypt-password-mapper.salt-index=-1
quarkus.security.jdbc.principal-query.roles.sql=select r.name as role_name from role r, (select m.role_id from assigned_role m join user u on m.user_id = u.id and u.login = ?) a where r.id >= a.role_id
quarkus.security.jdbc.principal-query.roles.attribute-mappings.0.index=1
quarkus.security.jdbc.principal-query.roles.attribute-mappings.0.to=groups
quarkus.http.auth.permission.roles1.paths=/*
quarkus.http.auth.permission.roles1.policy=authenticated

%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.sql-load-script=import.sql
%test.quarkus.datasource.devservices.image-name=mysql/mysql-server:5.5
